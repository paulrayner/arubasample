#!/usr/bin/env ruby
$: << File.expand_path("../lib/", __FILE__)

class RenameInfo
  attr_reader :folder
  attr_reader :find_type
  attr_reader :replace_type
  attr_reader :overwrite
  attr_reader :askoverwrite

  def initialize(folder, find_type, replace_type, overwrite, askoverwrite)
    @folder = folder
    @find_type = find_type
    @replace_type = replace_type
    @overwrite = overwrite
    @askoverwrite = askoverwrite
  end
end

def file_type(file_name)
  File.extname(file_name).gsub(/^\./, '').downcase 
end

def replace_ending(rename_info, file_name)
  base_name = File.basename(file_name, ".#{rename_info.find_type}")
  return "#{base_name}.#{rename_info.replace_type}"
end

def rename_file(rename_info, file_name)
  old_name = "#{rename_info.folder}/#{file_name}"
  new_name = "#{rename_info.folder}/" + replace_ending(rename_info, file_name)
	puts "Renaming #{old_name} to #{new_name}"

	abort("Error: Cannot overwrite file '#{new_name}'") if (File.exists?(new_name))
	File.rename(old_name, new_name)
end

def display_messages(rename_info)
	abort("Error: Folder '#{rename_info.folder}' does not exist") unless File.exists?(rename_info.folder)

	puts "Loading file names from folder: #{rename_info.folder}"
	puts "Replacing file type #{rename_info.find_type} with #{rename_info.replace_type}"
end

def bulk_rename(rename_info)
	display_messages(rename_info)
	Dir.foreach(rename_info.folder) do |file_name|
    if file_type(file_name) == rename_info.find_type.downcase
		  rename_file(rename_info, file_name)
    end
	end
end

def get_rename_info(arguments)
  if(arguments.size == 0) then
      puts 'USAGE: bulkrename <folder name> <find_extension> <replace_extension>'
      exit
  end
  abort 'Error: Too many arguments' if (arguments.size > 4)

  folder = arguments[0]
  find_type = arguments[1]
  replace_type = arguments[2]
  if arguments[3]
    option = arguments[3] 
    abort "Error: Not valid option" if not option[0..1] == "--"
    overwrite = true if option == "--overwrite"
    askoverwrite = true if option == "--askoverwrite"
  end

  abort("Error: <find_extension> is required") if not find_type 
  abort("Error: <replace_extension> is required") if not replace_type

  RenameInfo.new(folder, find_type, replace_type, overwrite, askoverwrite)
end

rename_info = get_rename_info(ARGV)
bulk_rename(rename_info)