#!/usr/bin/env ruby
$: << File.expand_path("../lib/", __FILE__)

def do_overwrite(ask_overwrite, new_name)
  overwrite = false
  if ask_overwrite
    print "File '#{new_name}' already exists, do you want to overwrite it (y/n)?"
    input = STDIN.gets.strip
    overwrite = true if input[0].downcase == 'y'
  end

  puts "Overwriting file '#{new_name}'" if overwrite == true
  overwrite
end

def do_rename(ask_overwrite, new_name)
  return true if not File.exists?(new_name)
  return true if File.exists?(new_name) && do_overwrite(ask_overwrite, new_name)
end

if ARGV.size == 0
  puts 'USAGE: bulkrename <folder name> <find extension> <replace extension> [--askoverwrite]'
  exit 0
end
abort 'Error: Too many arguments' if ARGV.size > 4
abort("Error: <find extension> is required") if ARGV.size == 1
abort("Error: <replace extension> is required") if ARGV.size == 2

folder = ARGV[0]
find_type = ARGV[1]
replace_type = ARGV[2]

if ARGV[3]
  abort "Error: Invalid option format '#{ARGV[3]}'" unless ARGV[3][0..1] == "--"
  ask_overwrite = ARGV[3] == "--askoverwrite"
  abort "Error: Invalid option name '#{ARGV[3]}'" unless ask_overwrite
end

abort("Error: Folder '#{folder}' does not exist") unless File.exists?(folder)

Dir.foreach(folder) do |file_name|
  type = File.extname(file_name).gsub(/^\./, '') 
  if type.downcase == find_type.downcase
    old_name = File.join(folder, file_name)
    new_name = File.join(folder, File.basename(file_name, ".#{type}") + ".#{replace_type}")
    if do_rename(ask_overwrite, new_name)
      File.rename(old_name, new_name)
    end
  end
end
